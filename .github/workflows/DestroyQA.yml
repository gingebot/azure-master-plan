name: "Close PR"

on:
  pull_request:
    types: [closed]
env:
  workspace:  "azure-master-plan-BRANCH-${{ github.head_ref }}"
  default_workspace: azure-master-plan-DEV
jobs:
  DestroyQA:
    name: 'Destroy QA Environment'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        
      - name: set default workspace
        run: |
          rm -rf .terraform
          mkdir .terraform
          printf '%s' ${{ env.default_workspace }} > .terraform/environment

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Select TF Workspace
        run: terraform workspace select ${{ env.workspace }}

      - name: Destroy preview environment
        id: destroy-preview-environment
        run: terraform destroy -auto-approve  -var "env=BRANCH-${{ github.head_ref }}" -var "client_id=${{ secrets.ARM_CLIENT_ID }}" -var "client_secret=${{ secrets.ARM_CLIENT_SECRET }}" -var "subscription_id=${{ secrets.ARM_SUBSCRIPTION_ID }}" -var "tenant_id=${{ secrets.ARM_TENANT_ID }}"
        continue-on-error: true
      
     - name: Comment Destroy Status on PR
        uses: actions/github-script@0.9.0
        env:
          DEST: "${{ steps.destroy-preview-environment.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = ## QA Environment Destruction\
            #### Terraform Destroy Run Status: \`${{ steps.destroy-preview-environment.outcome }}\`
            <details><summary>Show Destroy run</summary>
            \n\`\`\`\n
            ${process.env.DEST}
            \`\`\`\n
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Destroy Status
        if: steps.destroy-preview-environment.outcome == 'failure'
        run: exit 1

      - name: Select default TF Workspace
        run: terraform workspace select ${{ env.default_workspace }}
      
      - name: Delete TF Workspace
        run: terraform workspace delete ${{ env.workspace }}